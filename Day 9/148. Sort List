class Solution {
public:
    
    ListNode* SortedList(ListNode* l1, ListNode* l2){
        ListNode* temp = new ListNode(-1);
        ListNode* ans = temp;
        while(l1 && l2){
            if(l1->val <= l2->val){
                temp->next = l1;
                l1 = l1->next;
                temp = temp->next;
            }
            else{
                temp->next = l2;
                l2 = l2->next;
                temp = temp->next;
            }
        }
        if(l1 == NULL){
            temp->next = l2;
        }
        if(l2 == NULL){
            temp->next = l1;
        }
        return ans->next;

    }

    ListNode* sortList(ListNode* head) {
        if(head == NULL || head->next == NULL) 
        return head;
        ListNode* slow = head;
        ListNode* fast = head;

        while(fast->next && fast->next->next){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode *l1 = head;
        ListNode* l2 = slow->next;
        slow->next  = NULL;

        l1 = sortList(l1);
        l2 = sortList(l2);

        return SortedList(l1, l2); 
    }
};
