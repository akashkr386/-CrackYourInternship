class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        vector<int>v;
        int minR = 0,minC = 0;
        int maxR = m-1; 
        int maxC = n-1;

        while(minR <= maxR && minC <= maxC){
            //right
            if(minR > maxR || minC > maxC) break;
            for(int i = minC; i <= maxC; i++){
                v.push_back(matrix[minR][i]);
            }
            minR++;
            //bottom
            if(minR > maxR || minC > maxC) break;
            for(int i = minR; i <= maxR; i++){
                v.push_back(matrix[i][maxC]);
            }
            maxC--;
            //left
            if(minR > maxR || minC > maxC) break;
            for(int i = maxC; i >= minC; i--){
                v.push_back(matrix[maxR][i]);
            }
            maxR--;
            //up
            if(minR > maxR || minC > maxC) break;
            for(int i = maxR; i >= minR; i--){
                v.push_back(matrix[i][minC]);
            }
            minC++;
        }
        return v;
    }
};
