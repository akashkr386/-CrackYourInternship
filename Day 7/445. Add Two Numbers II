
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        stack<int>st1,st2;
        while(l1){
            st1.push(l1->val);
            l1 = l1->next;
        }
        while(l2){
            st2.push(l2->val);
            l2 = l2->next;
        }
        int sum = 0;
        int carry = 0;
        stack<int>st3;
        ListNode* temp = new ListNode(-1);
        ListNode* ans = temp;
        while(!st1.empty() || !st2.empty() || carry){
            if(!st1.empty()){
                sum = sum + st1.top();
                st1.pop();
            }
            if(!st2.empty()){
                sum = sum + st2.top();
                st2.pop();
            }
            sum+=carry;
            carry = sum/10;
            st3.push(sum%10);
            sum = 0;
        } 
        while(!st3.empty()){
            int val = st3.top();
            st3.pop();
            ListNode* x = new ListNode(val);
            temp->next = x;
            temp= temp->next;
        }
        
        return ans->next;       
    }
};
