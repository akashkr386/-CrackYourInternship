class Solution {
public:

    typedef pair<int, int>p;
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int>mp;

        for(int i = 0; i < nums.size(); i++){
            mp[nums[i]]++;
        }
        priority_queue<p, vector<p>, greater<p>>pq;
        for(auto &it : mp){
            int freq = it.second;
            int val = it.first;
            pq.push(make_pair(freq, val));
            if(pq.size() > k){
                pq.pop();
            }
        }
        vector<int> ans;
        while(!pq.empty()){
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
    }
};
